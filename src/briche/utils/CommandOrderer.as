package briche.utils {
	import flash.events.Event;
	import flash.events.EventDispatcher;
	
	
	/**
	 * --------------------------------------------------------------------------------------------------------
	 * CommandOrderer
	 * --------------------------------------------------------------------------------------------------------
	 */
	public class CommandOrderer extends EventDispatcher
	{
		// -- stack
		public var stack:Array;
		
		// -- the stack pointer
		public var pointer:int;
		
		
		/**
		 * --------------------------------------------------------------------------------------------------------
		 * BUILDER
		 * --------------------------------------------------------------------------------------------------------
		 */
		public function CommandOrderer() {
			reset();
		}
		
		
		/**
		 * --------------------------------------------------------------------------------------------------------
		 * RESET
		 * --------------------------------------------------------------------------------------------------------
		 */
		public function reset():void {
			initStack();
			initPointer();
		}
		
		
		/**
		 * --------------------------------------------------------------------------------------------------------
		 * INIT STACK
		 * --------------------------------------------------------------------------------------------------------
		 */
		public function initStack():void {
			stack = [];
		}
		
		
		/**
		 * --------------------------------------------------------------------------------------------------------
		 * INIT POINTER
		 * --------------------------------------------------------------------------------------------------------
		 */
		public function initPointer():void {
			pointer = -1;
		}
		
		
		/**
		 * --------------------------------------------------------------------------------------------------------
		 * ADD
		 * --------------------------------------------------------------------------------------------------------
		 * @param	fct
		 */
		public function addFunction(fct:Function):void {
			trace( "CommandOrderer :: addFunction >> " + fct );
			
			stack.push(fct);
		}
		
		public function execute():void {
			execNext();
		}
		
		
		/**
		 * --------------------------------------------------------------------------------------------------------
		 * EXEC
		 * --------------------------------------------------------------------------------------------------------
		 */
		public function execNext():void {
			pointer++;
			if (pointer < stack.length) {
				var fct:Function = stack[ pointer ] as Function;
				trace( "CommandOrderer :: execNext >> " + fct );
				fct();
			} else {
				trace( "CommandOrderer :: execNext >> COMPLETE" );
				reset();
				dispatchEvent( new Event( Event.COMPLETE ) );
			}
		}
	}

}